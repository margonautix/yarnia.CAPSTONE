const API_URL = "http://localhost:3000/api"; // Base URL for your API

// Fetch all stories from the API
export async function fetchAllStories() {
  try {
    const response = await fetch(`${API_URL}/stories`);
    if (!response.ok) {
      throw new Error(`Failed to fetch stories: ${response.statusText}`);
    }
    const data = await response.json();
    return data; // Assuming the data is an array of stories
  } catch (error) {
    console.error("Error fetching all stories:", error);
    throw error;
  }
}

export async function fetchSingleStory(storyId) {
  try {
    const response = await fetch(`${API_URL}/stories/${storyId}`); // Assuming the API endpoint is `/stories/:id`
    if (!response.ok) {
      throw new Error(`Error fetching story: ${response.statusText}`);
    }
    const data = await response.json(); // Parse the response data
    return data; // Return the data (should include the story object)
  } catch (error) {
    console.error("Error fetching the story:", error);
    throw error;
  }
}

// Fetch all comments from the API
export async function fetchAllComments() {
  try {
    const response = await fetch(`${API_URL}/comments`);
    if (!response.ok) {
      throw new Error(`Failed to fetch comments: ${response.statusText}`);
    }
    const data = await response.json();
    return data; // Assuming the data is an array of comments
  } catch (error) {
    console.error("Error fetching all comments:", error);
    throw error;
  }
}

// add new story 
// maybe add createdAt and author if those things are not autogenerated
export async function addNewStory(title, authorId, summary, content) {
  try {
    const response = await fetch(`${API_URL}/api/stories`,
      {
        method: 'POST',
        headers: {
          'Content-Type' : 'application/json',
        },
        body: JSON.stringify({
          title, authorId, summary, content
        }), 
      }
    )
    const result = await response.json();
    // return result.data.newStory (?)
  } catch (error) {
    console.error(err)    
  }
}

export async function fetchWithAuth(url, options = {}) {
  const token = localStorage.getItem("token");

  if (!token) {
    throw new Error("User is not authenticated");
  }

  return await fetch(url, {
    ...options,
    headers: {
      ...options.headers,
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`, // Add the token to the Authorization header
    },
  });
}

export const updateStoryContent = async (storyId, content) => {
  try {
    const response = await fetch(`/api/stories/${storyId}`, {
      method: "PUT", // Or PATCH, depending on your API design
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ content }),
    });

    if (!response.ok) {
      throw new Error("Failed to update the story content");
    }

    return await response.json(); // Return the updated story if needed
  } catch (error) {
    console.error("Error updating story content:", error);
  }
};
